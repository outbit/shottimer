

HI-TECH Software PICC Macro Assembler V9.50PL2
                                                      Wed Aug 12 00:09:06 2009


     1                           	processor	16F88
     2                           	opt	pw 79
     3                           	psect	text3,local,class=CODE,delta=2
     4                           	psect	text4,local,class=CODE,delta=2
     5                           	psect	text5,local,class=CODE,delta=2
     6                           	psect	text6,local,class=CODE,delta=2
     7                           	psect	text7,local,class=CODE,delta=2
     8                           	psect	temp,global,ovrld,class=BANK0,space=1,de
      +                          lta=1
     9  0000                     
    10  0000                     
    11  0000                     
    12  0000                     
    13  0000                     
    14  0000                     
    15  0000                     
    16  0000                     
    17  0000                     
    18  0000                     
    19  0000                     _lcd_writeint$val	set	?_lcd_writeint
    20  0000                     _lcd_writeint$style	set	?_lcd_writeint+2
    21                           
    22                           	psect	text3
    23  012A                     _lcd_clear
    24                           ;lcd.c: 118: void
    25  012A  0183               	clrf	3	;select bank 0
    26  012B  1205               	bcf	5,4
    27                           ;lcd.c: 122: lcd_write(0x1);
    28  012C  3001               	movlw	1
    29  012D  158A  2742  118A   	fcall	_lcd_write
    30                           ;lcd.c: 123: DelayMs(2);
    31  0130  3002               	movlw	2
    32  0131  118A  293F         	ljmp	_DelayMs
    33                           
    34                           	psect	text4
    35  0E97                     _lcd_puts
    36                           ;lcd.c: 128: void
    37  0E97  0183               	clrf	3	;select bank 0
    38  0E98  1605               	bsf	5,4
    39                           ;lcd.c: 132: while(*s)
    40  0E99  2EA4               	goto	l20
    41  0E9A                     l21
    42                           ;lcd.c: 133: lcd_write(*s++);
    43  0E9A  086A               	movf	?_lcd_puts+1,w
    44  0E9B  00FE               	movwf	code_ptr+1
    45  0E9C  0869               	movf	?_lcd_puts,w
    46  0E9D  0AE9               	incf	?_lcd_puts
    47  0E9E  1903               	btfsc	3,2
    48  0E9F  0AEA               	incf	?_lcd_puts+1
    49  0EA0  118A  203A  158A   	fcall	string_table
    50  0EA3  2742               	fcall	_lcd_write
    51  0EA4                     l20
    52  0EA4  086A               	movf	?_lcd_puts+1,w
    53  0EA5  00FE               	movwf	code_ptr+1
    54  0EA6  0869               	movf	?_lcd_puts,w
    55  0EA7  118A  203A  158A   	fcall	string_table
    56  0EAA  3800               	iorlw	0
    57  0EAB  1903               	btfsc	3,2
    58  0EAC  0008               	return
    59  0EAD  2E9A               	goto	l21
    60  0EAE                     _lcd_writeint
    61                           ;	_str assigned to ?a_lcd_writeint+0
    62  0000                     _lcd_writeint$str	set	?a_lcd_writeint
    63                           ;lcd.c: 23: void lcd_writeint(const WORD val, B
      +                          YTE style)
    64  0EAE  0183               	clrf	3	;select bank 0
    65  0EAF  01E3               	clrf	?a_lcd_writeint
    66  0EB0  01E4               	clrf	?a_lcd_writeint+1
    67  0EB1  01E5               	clrf	?a_lcd_writeint+2
    68  0EB2  01E6               	clrf	?a_lcd_writeint+3
    69  0EB3  01E7               	clrf	?a_lcd_writeint+4
    70  0EB4  01E8               	clrf	?a_lcd_writeint+5
    71                           ;lcd.c: 28: if (val < 1)
    72  0EB5  3000               	movlw	0
    73  0EB6  0261               	subwf	?_lcd_writeint+1,w
    74  0EB7  3001               	movlw	1
    75  0EB8  1903               	btfsc	3,2
    76  0EB9  0260               	subwf	?_lcd_writeint,w
    77  0EBA  1803               	btfsc	3,0
    78  0EBB  2EC3               	goto	l2
    79                           ;lcd.c: 29: {
    80  0EBC  3030               	movlw	48
    81  0EBD  00E3               	movwf	?a_lcd_writeint
    82                           ;lcd.c: 31: if (style == 1)
    83  0EBE  0B62               	decfsz	?_lcd_writeint+2,w
    84  0EBF  2F3D               	goto	l4
    85                           ;lcd.c: 32: {
    86  0EC0  3030               	movlw	48
    87  0EC1  00E4               	movwf	?a_lcd_writeint+1
    88                           ;lcd.c: 34: }
    89  0EC2  2F3D               	goto	l4
    90  0EC3                     l2
    91                           ;lcd.c: 36: else if (val < 10)
    92  0EC3  3000               	movlw	0
    93  0EC4  0261               	subwf	?_lcd_writeint+1,w
    94  0EC5  300A               	movlw	10
    95  0EC6  1903               	btfsc	3,2
    96  0EC7  0260               	subwf	?_lcd_writeint,w
    97  0EC8  1803               	btfsc	3,0
    98  0EC9  2ED7               	goto	l5
    99                           ;lcd.c: 37: {
   100  0ECA  0B62               	decfsz	?_lcd_writeint+2,w
   101  0ECB  2ED2               	goto	l6
   102                           ;lcd.c: 39: {
   103  0ECC  3030               	movlw	48
   104  0ECD  00E3               	movwf	?a_lcd_writeint
   105                           ;lcd.c: 41: str[1] = (unsigned char)( val );
   106  0ECE  0860               	movf	?_lcd_writeint,w
   107  0ECF  00E4               	movwf	?a_lcd_writeint+1
   108                           ;lcd.c: 42: str[1] += 48;
   109  0ED0  3030               	movlw	48
   110  0ED1  2EF3               	goto	L1
   111                           ;lcd.c: 43: }
   112  0ED2                     l6
   113                           ;lcd.c: 44: else
   114  0ED2  0860               	movf	?_lcd_writeint,w
   115  0ED3  00E3               	movwf	?a_lcd_writeint
   116                           ;lcd.c: 48: str[0] += 48;
   117  0ED4  3030               	movlw	48
   118  0ED5  07E3               	addwf	?a_lcd_writeint
   119                           ;lcd.c: 49: }
   120  0ED6  2F3D               	goto	l4
   121  0ED7                     l5
   122                           ;lcd.c: 51: else if (val < 100)
   123  0ED7  3000               	movlw	0
   124  0ED8  0261               	subwf	?_lcd_writeint+1,w
   125  0ED9  3064               	movlw	100
   126  0EDA  1903               	btfsc	3,2
   127  0EDB  0260               	subwf	?_lcd_writeint,w
   128  0EDC  1803               	btfsc	3,0
   129  0EDD  2EF5               	goto	l9
   130                           ;lcd.c: 52: {
   131  0EDE  300A               	movlw	10
   132  0EDF  00F2               	movwf	btemp+2
   133  0EE0  01F3               	clrf	btemp+3
   134  0EE1  0861               	movf	?_lcd_writeint+1,w
   135  0EE2  00F1               	movwf	btemp+1
   136  0EE3  0860               	movf	?_lcd_writeint,w
   137  0EE4  00F0               	movwf	btemp
   138  0EE5  118A  272D         	fcall	lwdiv
   139  0EE7  0874               	movf	btemp+4,w
   140  0EE8  00E3               	movwf	?a_lcd_writeint
   141                           ;lcd.c: 54: str[1] = (unsigned char)( val-(str[
      +                          0]*10) );
   142  0EE9  300A               	movlw	10
   143  0EEA  00F1               	movwf	btemp+1
   144  0EEB  0863               	movf	?a_lcd_writeint,w
   145  0EEC  118A  2133  158A   	fcall	lbmul
   146  0EEF  0260               	subwf	?_lcd_writeint,w
   147  0EF0  00E4               	movwf	?a_lcd_writeint+1
   148                           ;lcd.c: 56: str[0] += 48;
   149  0EF1  3030               	movlw	48
   150  0EF2  07E3               	addwf	?a_lcd_writeint
   151  0EF3                     L1
   152                           ;lcd.c: 57: str[1] += 48;
   153  0EF3  07E4               	addwf	?a_lcd_writeint+1
   154                           ;lcd.c: 58: }
   155  0EF4  2F3D               	goto	l4
   156  0EF5                     l9
   157                           ;lcd.c: 59: else if (val < 1000)
   158  0EF5  3003               	movlw	3
   159  0EF6  0261               	subwf	?_lcd_writeint+1,w
   160  0EF7  30E8               	movlw	232
   161  0EF8  1903               	btfsc	3,2
   162  0EF9  0260               	subwf	?_lcd_writeint,w
   163  0EFA  1803               	btfsc	3,0
   164  0EFB  2F35               	goto	l11
   165                           ;lcd.c: 60: {
   166  0EFC  3064               	movlw	100
   167  0EFD  00F2               	movwf	btemp+2
   168  0EFE  01F3               	clrf	btemp+3
   169  0EFF  0861               	movf	?_lcd_writeint+1,w
   170  0F00  00F1               	movwf	btemp+1
   171  0F01  0860               	movf	?_lcd_writeint,w
   172  0F02  00F0               	movwf	btemp
   173  0F03  118A  272D         	fcall	lwdiv
   174  0F05  0874               	movf	btemp+4,w
   175  0F06  00E3               	movwf	?a_lcd_writeint
   176                           ;lcd.c: 62: str[1] = (unsigned char)( (val-(str
      +                          [0]*100))/10 );
   177  0F07  3064               	movlw	100
   178  0F08  00F2               	movwf	btemp+2
   179  0F09  01F3               	clrf	btemp+3
   180  0F0A  0863               	movf	?a_lcd_writeint,w
   181  0F0B  00F0               	movwf	btemp
   182  0F0C  01F1               	clrf	btemp+1
   183  0F0D  118A  215E         	fcall	lwmul
   184  0F0F  0861               	movf	?_lcd_writeint+1,w
   185  0F10  00F1               	movwf	btemp+1
   186  0F11  0860               	movf	?_lcd_writeint,w
   187  0F12  00F0               	movwf	btemp
   188  0F13  0874               	movf	btemp+4,w
   189  0F14  02F0               	subwf	btemp
   190  0F15  1C03               	btfss	3,0
   191  0F16  03F1               	decf	btemp+1
   192  0F17  0875               	movf	btemp+5,w
   193  0F18  02F1               	subwf	btemp+1
   194  0F19  300A               	movlw	10
   195  0F1A  00F2               	movwf	btemp+2
   196  0F1B  3000               	movlw	0
   197  0F1C  01F3               	clrf	btemp+3
   198  0F1D  118A  272D         	fcall	lwdiv
   199  0F1F  0874               	movf	btemp+4,w
   200  0F20  00E4               	movwf	?a_lcd_writeint+1
   201                           ;lcd.c: 63: str[2] = (unsigned char)( (val-((st
      +                          r[0]*100)+(str[1]*10))) );
   202  0F21  300A               	movlw	10
   203  0F22  00F1               	movwf	btemp+1
   204  0F23  0863               	movf	?a_lcd_writeint,w
   205  0F24  118A  2133         	fcall	lbmul
   206  0F26  0764               	addwf	?a_lcd_writeint+1,w
   207  0F27  00F0               	movwf	btemp
   208  0F28  300A               	movlw	10
   209  0F29  00F1               	movwf	btemp+1
   210  0F2A  0870               	movf	btemp,w
   211  0F2B  118A  2133  158A   	fcall	lbmul
   212  0F2E  0260               	subwf	?_lcd_writeint,w
   213  0F2F  00E5               	movwf	?a_lcd_writeint+2
   214                           ;lcd.c: 65: str[0] += 48;
   215  0F30  3030               	movlw	48
   216  0F31  07E3               	addwf	?a_lcd_writeint
   217                           ;lcd.c: 66: str[1] += 48;
   218  0F32  07E4               	addwf	?a_lcd_writeint+1
   219                           ;lcd.c: 67: str[2] += 48;
   220  0F33  07E5               	addwf	?a_lcd_writeint+2
   221                           ;lcd.c: 68: }
   222  0F34  2F3D               	goto	l4
   223  0F35                     l11
   224                           ;lcd.c: 69: else
   225  0F35  3030               	movlw	48
   226  0F36  00E3               	movwf	?a_lcd_writeint
   227                           ;lcd.c: 72: str[1] = 0;
   228  0F37  01E4               	clrf	?a_lcd_writeint+1
   229                           ;lcd.c: 73: str[2] = 0;
   230  0F38  01E5               	clrf	?a_lcd_writeint+2
   231                           ;lcd.c: 74: str[3] = 0;
   232  0F39  01E6               	clrf	?a_lcd_writeint+3
   233                           ;lcd.c: 75: str[4] = 0;
   234  0F3A  01E7               	clrf	?a_lcd_writeint+4
   235                           ;lcd.c: 76: str[5] = 0;
   236  0F3B  01E8               	clrf	?a_lcd_writeint+5
   237                           ;lcd.c: 77: str[6] = 0;
   238  0F3C  01E9               	clrf	?a_lcd_writeint+6
   239  0F3D                     l4
   240                           ;lcd.c: 78: }
   241  0F3D  3063               	movlw	?a_lcd_writeint
   242  0F3E  00E9               	movwf	?_lcd_puts
   243  0F3F  3080               	movlw	128
   244  0F40  00EA               	movwf	?_lcd_puts+1
   245  0F41  2E97               	ljmp	_lcd_puts
   246  0F42                     _lcd_write
   247                           ;	_c assigned to ?a_lcd_write+0
   248  0000                     _lcd_write$c	set	?a_lcd_write
   249                           ;	__dcnt assigned to ?a_lcd_write+1
   250  0000                     _lcd_write$_dcnt	set	?a_lcd_write+1
   251                           ;_c stored from w
   252  0F42  0183               	clrf	3	;select bank 0
   253  0F43  00EB               	movwf	?a_lcd_write
   254                           ;lcd.c: 98: void
   255  0F44  3028               	movlw	40
   256  0F45  00EC               	movwf	?a_lcd_write+1
   257  0F46                     l15
   258  0F46  0BEC               	decfsz	?a_lcd_write+1
   259  0F47  2F46               	goto	l15
   260                           ;lcd.c: 102: RB7 = ((c & 0b10000000) >> 7);
   261  0F48  086B               	movf	?a_lcd_write,w
   262  0F49  3980               	andlw	-128
   263  0F4A  00F0               	movwf	btemp
   264  0F4B  3007               	movlw	7
   265  0F4C  00F1               	movwf	btemp+1
   266  0F4D                     u85
   267  0F4D  1003               	bcf	3,0
   268  0F4E  0CF0               	rrf	btemp
   269  0F4F  0BF1               	decfsz	btemp+1
   270  0F50  2F4D               	goto	u85
   271  0F51  0870               	movf	btemp,w
   272  0F52  00F0               	movwf	btemp
   273  0F53  0C70               	rrf	btemp,w
   274  0F54  1C03               	btfss	3,0
   275  0F55  2F58               	goto	u90
   276  0F56  1786               	bsf	6,7
   277  0F57  2F59               	goto	u104
   278  0F58                     u90
   279  0F58  1386               	bcf	6,7
   280  0F59                     u104
   281                           ;lcd.c: 103: RB6 = ((c & 0b01000000) >> 6);
   282  0F59  1283               	bcf	3,5
   283  0F5A  1303               	bcf	3,6	;carry unused
   284  0F5B  086B               	movf	?a_lcd_write,w
   285  0F5C  3940               	andlw	64
   286  0F5D  00F0               	movwf	btemp
   287  0F5E  3006               	movlw	6
   288  0F5F  00F1               	movwf	btemp+1
   289  0F60                     u115
   290  0F60  1003               	bcf	3,0
   291  0F61  0CF0               	rrf	btemp
   292  0F62  0BF1               	decfsz	btemp+1
   293  0F63  2F60               	goto	u115
   294  0F64  0870               	movf	btemp,w
   295  0F65  00F0               	movwf	btemp
   296  0F66  0C70               	rrf	btemp,w
   297  0F67  1C03               	btfss	3,0
   298  0F68  2F6B               	goto	u120
   299  0F69  1706               	bsf	6,6
   300  0F6A  2F6C               	goto	u134
   301  0F6B                     u120
   302  0F6B  1306               	bcf	6,6
   303  0F6C                     u134
   304                           ;lcd.c: 104: RB5 = ((c & 0b00100000) >> 5);
   305  0F6C  1283               	bcf	3,5
   306  0F6D  1303               	bcf	3,6	;carry unused
   307  0F6E  086B               	movf	?a_lcd_write,w
   308  0F6F  3920               	andlw	32
   309  0F70  00F0               	movwf	btemp
   310  0F71  3005               	movlw	5
   311  0F72  00F1               	movwf	btemp+1
   312  0F73                     u145
   313  0F73  1003               	bcf	3,0
   314  0F74  0CF0               	rrf	btemp
   315  0F75  0BF1               	decfsz	btemp+1
   316  0F76  2F73               	goto	u145
   317  0F77  0870               	movf	btemp,w
   318  0F78  00F0               	movwf	btemp
   319  0F79  0C70               	rrf	btemp,w
   320  0F7A  1C03               	btfss	3,0
   321  0F7B  2F7E               	goto	u150
   322  0F7C  1686               	bsf	6,5
   323  0F7D  2F7F               	goto	u164
   324  0F7E                     u150
   325  0F7E  1286               	bcf	6,5
   326  0F7F                     u164
   327                           ;lcd.c: 105: RB4 = ((c & 0b00010000) >> 4);
   328  0F7F  1283               	bcf	3,5
   329  0F80  1303               	bcf	3,6	;carry unused
   330  0F81  086B               	movf	?a_lcd_write,w
   331  0F82  3910               	andlw	16
   332  0F83  00F0               	movwf	btemp
   333  0F84  0EF0               	swapf	btemp
   334  0F85  300F               	movlw	15
   335  0F86  05F0               	andwf	btemp
   336  0F87  0870               	movf	btemp,w
   337  0F88  0C70               	rrf	btemp,w
   338  0F89  1C03               	btfss	3,0
   339  0F8A  2F8D               	goto	u170
   340  0F8B  1606               	bsf	6,4
   341  0F8C  2F8E               	goto	u184
   342  0F8D                     u170
   343  0F8D  1206               	bcf	6,4
   344  0F8E                     u184
   345                           ;lcd.c: 106: ((RA3 = 1),(RA3=0));
   346  0F8E  1585               	bsf	5,3
   347  0F8F  1185               	bcf	5,3
   348                           ;lcd.c: 107: RB7 = ((c & 0b00001000) >> 3);
   349  0F90  086B               	movf	?a_lcd_write,w
   350  0F91  3908               	andlw	8
   351  0F92  00F0               	movwf	btemp
   352  0F93  1003               	bcf	3,0
   353  0F94  0CF0               	rrf	btemp
   354  0F95  1003               	bcf	3,0
   355  0F96  0CF0               	rrf	btemp
   356  0F97  1003               	bcf	3,0
   357  0F98  0C70               	rrf	btemp,w
   358  0F99  00F0               	movwf	btemp
   359  0F9A  0C70               	rrf	btemp,w
   360  0F9B  1C03               	btfss	3,0
   361  0F9C  2F9F               	goto	u190
   362  0F9D  1786               	bsf	6,7
   363  0F9E  2FA0               	goto	u204
   364  0F9F                     u190
   365  0F9F  1386               	bcf	6,7
   366  0FA0                     u204
   367                           ;lcd.c: 108: RB6 = ((c & 0b00000100) >> 2);
   368  0FA0  086B               	movf	?a_lcd_write,w
   369  0FA1  3904               	andlw	4
   370  0FA2  00F0               	movwf	btemp
   371  0FA3  1003               	bcf	3,0
   372  0FA4  0CF0               	rrf	btemp
   373  0FA5  1003               	bcf	3,0
   374  0FA6  0C70               	rrf	btemp,w
   375  0FA7  00F0               	movwf	btemp
   376  0FA8  0C70               	rrf	btemp,w
   377  0FA9  1C03               	btfss	3,0
   378  0FAA  2FAD               	goto	u210
   379  0FAB  1706               	bsf	6,6
   380  0FAC  2FAE               	goto	u224
   381  0FAD                     u210
   382  0FAD  1306               	bcf	6,6
   383  0FAE                     u224
   384                           ;lcd.c: 109: RB5 = ((c & 0b00000010) >> 1);
   385  0FAE  086B               	movf	?a_lcd_write,w
   386  0FAF  3902               	andlw	2
   387  0FB0  00F0               	movwf	btemp
   388  0FB1  1003               	bcf	3,0
   389  0FB2  0C70               	rrf	btemp,w
   390  0FB3  00F0               	movwf	btemp
   391  0FB4  0C70               	rrf	btemp,w
   392  0FB5  1C03               	btfss	3,0
   393  0FB6  2FB9               	goto	u230
   394  0FB7  1686               	bsf	6,5
   395  0FB8  2FBA               	goto	u244
   396  0FB9                     u230
   397  0FB9  1286               	bcf	6,5
   398  0FBA                     u244
   399                           ;lcd.c: 110: RB4 = ((c & 0b00000001) );
   400  0FBA  0C6B               	rrf	?a_lcd_write,w
   401  0FBB  1C03               	btfss	3,0
   402  0FBC  2FBF               	goto	u250
   403  0FBD  1606               	bsf	6,4
   404  0FBE  2FC0               	goto	u264
   405  0FBF                     u250
   406  0FBF  1206               	bcf	6,4
   407  0FC0                     u264
   408                           ;lcd.c: 111: ((RA3 = 1),(RA3=0));
   409  0FC0  1585               	bsf	5,3
   410  0FC1  1185               	bcf	5,3
   411                           ;lcd.c: 112: }
   412  0FC2  0008               	return	;W free
   413  0FC3                     _lcd_writefloat
   414                           ;	_ret assigned to ?a_lcd_writefloat+0
   415  0000                     _lcd_writefloat$ret	set	?a_lcd_writefloat
   416                           ;	_unum assigned to ?a_lcd_writefloat+1
   417  0000                     _lcd_writefloat$unum	set	?a_lcd_writefloat+1
   418                           ;lcd.c: 82: void lcd_writefloat(const float num
      +                          )
   419  0FC3  0183               	clrf	3	;select bank 0
   420  0FC4  085B               	movf	?_lcd_writefloat,w
   421  0FC5  00F0               	movwf	btemp
   422  0FC6  085C               	movf	?_lcd_writefloat+1,w
   423  0FC7  00F1               	movwf	btemp+1
   424  0FC8  085D               	movf	?_lcd_writefloat+2,w
   425  0FC9  00F2               	movwf	btemp+2
   426  0FCA  118A  26F7         	fcall	fttol
   427  0FCC  0870               	movf	btemp,w
   428  0FCD  00DF               	movwf	?a_lcd_writefloat+1
   429                           ;lcd.c: 88: ret = (BYTE) ( (num-unum)*100 );
   430  0FCE  00F0               	movwf	btemp
   431  0FCF  118A  25E3         	fcall	lbtoft
   432  0FD1  0870               	movf	btemp,w
   433  0FD2  00F3               	movwf	btemp+3
   434  0FD3  0871               	movf	btemp+1,w
   435  0FD4  00F4               	movwf	btemp+4
   436  0FD5  0872               	movf	btemp+2,w
   437  0FD6  00F5               	movwf	btemp+5
   438  0FD7  085B               	movf	?_lcd_writefloat,w
   439  0FD8  00F0               	movwf	btemp
   440  0FD9  085C               	movf	?_lcd_writefloat+1,w
   441  0FDA  00F1               	movwf	btemp+1
   442  0FDB  085D               	movf	?_lcd_writefloat+2,w
   443  0FDC  00F2               	movwf	btemp+2
   444  0FDD  118A  264D         	fcall	ftsub
   445  0FDF  01F3               	clrf	btemp+3
   446  0FE0  30C8               	movlw	200
   447  0FE1  00F4               	movwf	btemp+4
   448  0FE2  3042               	movlw	66
   449  0FE3  00F5               	movwf	btemp+5
   450  0FE4  118A  26B6         	fcall	ftmul
   451  0FE6  118A  26F7         	fcall	fttol
   452  0FE8  0870               	movf	btemp,w
   453  0FE9  00DE               	movwf	?a_lcd_writefloat
   454                           ;lcd.c: 90: lcd_writeint((BYTE)num, 0);
   455  0FEA  085B               	movf	?_lcd_writefloat,w
   456  0FEB  00F0               	movwf	btemp
   457  0FEC  085C               	movf	?_lcd_writefloat+1,w
   458  0FED  00F1               	movwf	btemp+1
   459  0FEE  085D               	movf	?_lcd_writefloat+2,w
   460  0FEF  00F2               	movwf	btemp+2
   461  0FF0  118A  26F7  158A   	fcall	fttol
   462  0FF3  0870               	movf	btemp,w
   463  0FF4  00E0               	movwf	?_lcd_writeint
   464  0FF5  01E1               	clrf	?_lcd_writeint+1
   465  0FF6  01E2               	clrf	?_lcd_writeint+2
   466  0FF7  26AE  158A         	fcall	_lcd_writeint
   467                           ;lcd.c: 91: lcd_write('.');
   468  0FF9  302E               	movlw	46
   469  0FFA  2742               	fcall	_lcd_write
   470                           ;lcd.c: 92: lcd_writeint((BYTE)ret, 0);
   471  0FFB  085E               	movf	?a_lcd_writefloat,w
   472  0FFC  00E0               	movwf	?_lcd_writeint
   473  0FFD  01E1               	clrf	?_lcd_writeint+1
   474  0FFE  01E2               	clrf	?_lcd_writeint+2
   475  0FFF  2EAE               	ljmp	_lcd_writeint
   476                           
   477                           	psect	text5
   478  011F                     _lcd_putch
   479                           ;	_c assigned to ?a_lcd_putch+0
   480  0000                     _lcd_putch$c	set	?a_lcd_putch
   481                           ;_c stored from w
   482  011F  0183               	clrf	3	;select bank 0
   483  0120  00D8               	movwf	?a_lcd_putch
   484                           ;lcd.c: 138: void
   485  0121  1605               	bsf	5,4
   486                           ;lcd.c: 142: lcd_write( c );
   487  0122  158A  2F42         	ljmp	_lcd_write
   488                           
   489                           	psect	text6
   490  0124                     _lcd_goto
   491                           ;	_pos assigned to ?a_lcd_goto+0
   492  0000                     _lcd_goto$pos	set	?a_lcd_goto
   493                           ;_pos stored from w
   494  0124  0183               	clrf	3	;select bank 0
   495  0125  00DC               	movwf	?a_lcd_goto
   496                           ;lcd.c: 150: void
   497  0126  1205               	bcf	5,4
   498                           ;lcd.c: 154: lcd_write(0x80+pos);
   499  0127  3E80               	addlw	-128
   500  0128  158A  2F42         	ljmp	_lcd_write
   501                           
   502                           	psect	text7
   503  0000                     
   504  0000                     
   505  0000                     
   506  0000                     
   507  0000                     
   508  0000                     
   509  0000                     
   510  0000                     
   511  0000                     
   512  0000                     
   513  0000                     
   514  0000                     
   515  0000                     
   516  0000                     
   517  0000                     
   518  0000                     
   519  0000                     
   520  0000                     
   521  0000                     
   522  0000                     
   523  0000                     
   524  0000                     
   525  0000                     
   526  0000                     
   527  0000                     
   528  0000                     
   529  0000                     
   530  0000                     
   531  0000                     
   532  0000                     
   533  0000                     
   534  0000                     
   535  0000                     
   536  0000                     
   537  0000                     
   538  0000                     
   539  0000                     
   540  0000                     
   541  0000                     
   542  0000                     
   543  0000                     
   544  0000                     
   545  0000                     
   546  0000                     
   547  0000                     
   548  0000                     
   549  0000                     
   550  0000                     
   551  0000                     
   552  0000                     
   553  0000                     
   554  0000                     
   555  0000                     
   556  0000                     
   557  0000                     
   558  0000                     
   559  0000                     
   560  0000                     
   561  0000                     
   562  0000                     
   563  0000                     
   564  0000                     
   565  0000                     
   566  0000                     
   567  0000                     
   568  0000                     
   569  0000                     
   570  0000                     
   571  0000                     
   572  0000                     
   573  0000                     
   574  0000                     
   575  0000                     
   576  0000                     
   577  0000                     
   578  0000                     
   579  0000                     
   580  0000                     
   581  0000                     
   582  0000                     
   583  0000                     
   584  0000                     
   585  0000                     
   586  0000                     
   587  0000                     
   588  0000                     
   589  0000                     
   590  0000                     
   591  0000                     
   592  0000                     
   593  0000                     
   594  0000                     
   595  0000                     
   596  0000                     
   597  0000                     
   598  0000                     
   599  0000                     
   600  0000                     
   601  0000                     
   602  0000                     
   603  0000                     
   604  0000                     
   605  0000                     
   606  0000                     
   607  0000                     
   608  0000                     
   609  0000                     
   610  0000                     
   611  0000                     
   612  0000                     
   613  0000                     
   614  0000                     
   615  0000                     
   616  0000                     
   617  0000                     
   618  0000                     
   619  0000                     
   620  0000                     
   621  0000                     
   622  0000                     
   623  0000                     
   624  0000                     
   625  0000                     
   626  0000                     
   627  0000                     
   628  0000                     
   629  0000                     
   630  0000                     
   631  0000                     
   632  0000                     
   633  0000                     
   634  0000                     
   635  0000                     
   636  0000                     
   637  0000                     
   638  0000                     
   639  0000                     
   640  0000                     
   641  0000                     
   642  0000                     
   643  0000                     
   644  0000                     
   645  0000                     
   646  0000                     
   647  0000                     
   648  0000                     
   649  0000                     
   650  0000                     
   651  0000                     
   652  0000                     
   653  0000                     
   654  0000                     
   655  0000                     
   656  0000                     
   657  0000                     
   658  0000                     
   659  0000                     
   660  0000                     
   661  0000                     
   662  0000                     
   663  0000                     
   664  0000                     
   665  0000                     
   666  0000                     
   667  0000                     
   668  0000                     
   669  0000                     
   670  0000                     
   671  0000                     
   672  0000                     
   673  0000                     
   674  0000                     
   675  0000                     
   676  0000                     
   677  0000                     
   678  0000                     
   679  0000                     
   680  0000                     
   681  0000                     
   682  0000                     
   683  0000                     
   684  0000                     
   685  0000                     
   686  0000                     
   687  0000                     
   688  0000                     
   689  0000                     
   690  0000                     
   691  0000                     
   692  0000                     
   693  0000                     
   694  0000                     
   695  0000                     
   696  0000                     
   697  0000                     
   698  0000                     
   699  0000                     
   700  0000                     
   701  0000                     
   702  0000                     
   703  0000                     
   704  0000                     
   705  0000                     
   706  0000                     
   707  0000                     
   708  0000                     
   709  0000                     
   710  0000                     
   711  0000                     
   712  0000                     
   713  0000                     
   714  0000                     
   715  0000                     
   716  0000                     
   717  0000                     
   718  0000                     
   719  0000                     
   720  0000                     
   721  0000                     
   722  0000                     
   723  0000                     
   724  0000                     
   725  0000                     
   726  0000                     
   727  0000                     
   728  0000                     
   729  0000                     
   730  0000                     
   731  0000                     
   732  0000                     
   733  0000                     
   734  0000                     
   735  0000                     
   736  0000                     
   737  0000                     
   738  0000                     
   739  0000                     
   740                           
   741                           	psect	temp
   742  0070                     btemp
   743  0070                     	ds	6


HI-TECH Software PICC Macro Assembler V9.50PL2
Symbol Table                                          Wed Aug 12 00:09:06 2009

        ?a_lcd_putch 0058          ?a_lcd_write 006B  
                  l2 0EC3                    l4 0F3D  
                  l5 0ED7                    l6 0ED2  
                  l9 0EF5                   l11 0F35  
                 l20 0EA4                   l21 0E9A  
                 l15 0F46                   u90 0F58  
                 u85 0F4D             _lcd_goto 0124  
           _lcd_puts 0E97                  u120 0F6B  
                u104 0F59                  u210 0FAD  
                u115 0F60                  u204 0FA0  
                u230 0FB9                  u150 0F7E  
                u134 0F6C                  u224 0FAE  
                u145 0F73                  u250 0FBF  
                u170 0F8D                  u244 0FBA  
                u164 0F7F                  u190 0F9F  
                u264 0FC0                  u184 0F8E  
     ?a_lcd_writeint 0063            _lcd_clear 012A  
      ?_lcd_writeint 0060            _lcd_putch 011F  
          _lcd_write 0F42              _DelayMs 013F  
          ?_lcd_puts 0069                 btemp 0070  
               lbmul 0133                 ftmul 06B6  
               ftsub 064D                 fttol 06F7  
               lwdiv 072D                 lwmul 015E  
     _lcd_writefloat 0FC3           ?a_lcd_goto 005C  
       _lcd_writeint 0EAE     ?a_lcd_writefloat 005E  
            code_ptr 007D          string_table 003A  
              lbtoft 05E3      ?_lcd_writefloat 005B  
              status 0003         used_code_ptr 0001  
         used_btemp0 0001           used_btemp1 0001  
         used_btemp2 0001           used_btemp3 0001  
         used_btemp4 0001           used_btemp5 0001  
